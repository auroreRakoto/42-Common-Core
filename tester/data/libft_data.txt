[ft_atoi]
# --- basic positives and negatives ---
42|42
-42|-42
+42|42
0|0
-0|0
+0|0
# --- whitespace handling ---
"   123"|123
"\t\n\r\v\f123"|123
"   -42"| -42
"\n+42"|42
" \t \n -00123"| -123
# --- signs ---
"--42"|0
"++42"|0
"+-42"|0
"-+42"|0
# --- boundaries ---
2147483647|2147483647
-2147483648|-2147483648
2147483648| -2147483648
-2147483649|2147483647
# --- long numbers (stop at non-digit) ---
"123abc"|123
"-123abc"|-123
"+9999xyz"|9999
# --- empty / non-digit ---
""|0
" "|0
"a123"|0
"--"|0
"++"|0
"+"|0
"-"|0
# --- leading zeros ---
"000123"|123
"-000123"|-123
# --- extreme spacing ---
"          42"|42
"\n\n\n-42"| -42
# --- big with junk ---
"9223372036854775807xyz"| -1
"-9223372036854775808xyz"|0


[ft_bzero]
"abcd,0"|hex:61626364
"abcd,1"|hex:00626364
"abcd,2"|hex:00006364
"abcd,4"|hex:00000000
",0"|hex:
",1"|hex:
# longueur exacte / -1 / > len
"abc,3"|hex:000000
"abc,999"|hex:000000
"abcdef,5"|hex:000000000066

# chaînes plus longues
"hello world,1"|hex:00656c6c6f20776f726c64
"hello world,6"|hex:000000000000776f726c64
"hello world,11"|hex:0000000000000000000000

# vide + N variés (déjà partiellement présents)
",5"|hex:
",999"|hex:

# caractères répétés
"zzzzzz,2"|hex:00007a7a7a7a
"zzzzzz,6"|hex:000000000000


[ft_calloc]
"0,0"|zero
"1,1"|zero
"3,4"|zero
"5,0"|zero
"0,5"|zero
"100,1"|zero
# tailles usuelles
"2,2"|zero
"10,4"|zero
"256,16"|zero

# zéros et négatifs (le harness convertit <0 en 0)
"-1,5"|zero
"5,-1"|zero
"-10,-10"|zero

# tailles unitaires / grandes
"1,1024"|zero
"1024,1"|zero
"4096,8"|zero

# cas ambigu 'man' (nmemb==0 ou size==0) -> autorisé: NULL ou ptr libérable ; ton harness s'attend à "zero"
"0,1024"|zero
"1024,0"|zero

# très grandes multiplications (peuvent échouer -> "null" selon l'implémentation système)
"1048576,1048576"|null
"268435456,16"|null


[ft_isalnum]
"A"|1
"Z"|1
"a"|1
"z"|1
"0"|1
"9"|1
"!"|0

[ft_isalpha]
"A"|1
"z"|1
"9"|0
"!"|0

[ft_isascii]
"\x00"|1
"\x7F"|1
"\x80"|0

[ft_isdigit]
"0"|1
"5"|1
"9"|1
"A"|0

[ft_isprint]
" "|1
"~"|1
"\x1F"|0
"\x7F"|0

[ft_itoa]
"0"|0
"1"|1
"-1"|-1
"42"|42
"-2147483648"|-2147483648
"2147483647"|2147483647

[ft_memchr]
"abcdef|c|6"|idx:2
"abcdef|z|6"|null
"aaaaa|a|3"|idx:0

[ft_memcmp]
"abc|abc|3"|0
"abc|abd|3"| -1
"abd|abc|3"| 1
"abc|abd|2"|0

[ft_memcpy]
"abcd|0"|hex:00000000
"abcd|2"|hex:61620000
"abcd|4"|hex:61626364

[ft_memmove]
"abcdef|0|2|3"|hex:616261626366
"abcdef|2|0|3"|hex:636465646566
"aaaaa|0|1|4"|hex:6161616161

[ft_memset]
"abcd|X|0"|hex:61626364
"abcd|X|2"|hex:58586364
"abcd|X|4"|hex:58585858

[ft_putchar_fd]
"A"|A

[ft_putendl_fd]
"Hello"|Hello\n

[ft_putnbr_fd]
"0"|0
"-123"| -123

[ft_putstr_fd]
"Hello"|Hello

[ft_split]
# --- more ft_split tests ---
abc|,|split:abc
a,,b,,,c|,|split:a|b|c
,a,b,c,|,|split:a|b|c
,|,|split:
,,,|,|split:
a|,|split:a
a,|,|split:a
,a|,|split:a
a, ,b,  ,c|,|split:a| |b|  |c
# dot as separator
a.b.c|.|split:a|b|c
.a.b.|.|split:a|b
....|.|split:
a.|.|split:a
|.|split:
# slash as separator
path/to/file|/|split:path|to|file
//a///b////|/|split:a|b
/leading|/|split:leading
trailing/|/|split:trailing
/|/|split:
# colon as separator
a::b:c:::|:|split:a|b|c
::|:|split:
abc|:|split:abc
# dash as separator
a--b---c|-|split:a|b|c
-a-b-|-|split:a|b
-| -|split:
--|-|split:
# underscore as separator
___a__|_|split:a
abc|_|split:abc
# plus as separator
++a+b++|+|split:a|b
+++|+|split:
# equals as separator
=a==b=|=|split:a|b
==|=|split:
# digit as separator
100200300|0|split:1|2|3
000|0|split:
101|0|split:1|1
# asterisk as separator
a**b***c|*|split:a|b|c
***|*|split:
# delimiter not present
no_delimiters_here|,|split:no_delimiters_here
# long / many delimiters
aaa,,,bbb,,ccc,,,,|,|split:aaa|bbb|ccc
a,b,,c,,|,|split:a|b|c
, , ,a, , ,b, ,|,|split: | |a| | |b| 
single|,|split:single
end,,|,|split:end
,,start|,|split:start



[ft_strchr]
"abcde|c"|idx:2
"abcde|z"|null
"aaaa|a"|idx:0

[ft_strdup]
"hello"|hello
""|

[ft_striteri]
"abc"|bcd
"XYZ"|YZA

[ft_strjoin]
[ft_strjoin]
# empty + non-empty
|a|a
a||a
||
|helloworld|helloworld
|foobar|foobar
|abc|abc
|hello world|hello world
|leadtrail|leadtrail
|\t\n|\t\n
| \t \n\r \f| \t \n\r \f

# symbols / punctuation
|abc--xyz|abc--xyz
|abc_xyz123|abc_xyz123
|[]{}()<>=+|[]{}()<>=+
|::;;|::;;
|ABCdef|ABCdef

# longer
|aaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb|aaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbb
|loremipsumdolorsit amet consectetur|loremipsumdolorsit amet consectetur
|ab|ab
|Xlonglonglong|Xlonglonglong
|longlonglongZ|longlonglongZ

# edge-y empties / small mix
||
| | 
||
|a|a
|b|b


[ft_strlcat]
"abc|def|0"|ret:3;dst:
"abc|def|2"|ret:5;dst:abc
"abc|def|6"|ret:6;dst:abcdef

[ft_strlcpy]
"abc|0"|ret:3;dst:
"abc|1"|ret:3;dst:
"abc|2"|ret:3;dst:a
"abc|4"|ret:3;dst:abc

[ft_strlen]
Hello|5
""|0
abc|3

[ft_strmapi]
"abc"|bcd
"xyz"|yza

[ft_strncmp]
"abc|abd|2"| 0
"abc|abd|3"| -1
"abd|abc|3"| 1

[ft_strnstr]
"foo bar baz|bar|11"|idx:4
"foo bar baz|baz|11"|idx:8
"foo bar baz|xyz|11"|null

[ft_strrchr]
"abca|a"|idx:3
"hello|x"|null

[ft_strtrim]
"  hello  | "|hello
"--abc--|-"|abc
"xxxabxxx|x"|ab

[ft_substr]
"hello|0|5"|hello
"hello|2|2"|ll
"hello|5|1"|

[ft_tolower]
"A"|a
"Z"|z
"z"|z

[ft_toupper]
"a"|A
"z"|Z
"Z"|Z
"5"|5
"\x7F"|\x7F